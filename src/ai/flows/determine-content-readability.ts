// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Determines the readability score of a given text content.
 *
 * - determineContentReadability - A function that analyzes text content and returns its readability score.
 * - DetermineContentReadabilityInput - The input type for the determineContentReadability function, which is a string of text.
 * - DetermineContentReadabilityOutput - The return type for the determineContentReadability function, which is a number representing the readability score.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const DetermineContentReadabilityInputSchema = z
  .string()
  .describe('The text content to analyze for readability.');
export type DetermineContentReadabilityInput = z.infer<
  typeof DetermineContentReadabilityInputSchema
>;

const DetermineContentReadabilityOutputSchema = z
  .number()
  .describe('The Flesch-Kincaid readability score of the text content.');
export type DetermineContentReadabilityOutput = z.infer<
  typeof DetermineContentReadabilityOutputSchema
>;

export async function determineContentReadability(
  input: DetermineContentReadabilityInput
): Promise<DetermineContentReadabilityOutput> {
  return determineContentReadabilityFlow(input);
}

const prompt = ai.definePrompt({
  name: 'determineContentReadabilityPrompt',
  input: {schema: DetermineContentReadabilityInputSchema},
  output: {schema: DetermineContentReadabilityOutputSchema},
  prompt: `You are an expert in analyzing text readability.
  Given the following text, determine the Flesch-Kincaid readability score. Return just a number with no other explanation. If you cannot determine the score, return -1.

  Text: {{{$input}}} `,
});

const determineContentReadabilityFlow = ai.defineFlow(
  {
    name: 'determineContentReadabilityFlow',
    inputSchema: DetermineContentReadabilityInputSchema,
    outputSchema: DetermineContentReadabilityOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
